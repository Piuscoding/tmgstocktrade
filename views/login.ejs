
<!DOCTYPE html>
<html lang="en">

<head>
  

    
    <link rel="stylesheet" href="https://beta.tmgstock.com/public/css/style.css?75226">

    
    <link rel="stylesheet"
        href="https://beta.tmgstock.com/public/vendor/bootstrap/css/bootstrap.css?74284">
    <link rel="stylesheet" href="https://beta.tmgstock.com/public/vendor/fontawesome/css/all.css">

</head>

<body>


<br />
<select onchange="doGTranslate(this);">
    <option value="">Select Language</option>
    <option value="en|af">Afrikaans</option>
    <option value="en|sq">Albanian</option>
    <option value="en|ar">Arabic</option>
    <option value="en|hy">Armenian</option>
    <option value="en|az">Azerbaijani</option>
    <option value="en|eu">Basque</option>
    <option value="en|be">Belarusian</option>
    <option value="en|bg">Bulgarian</option>
    <option value="en|ca">Catalan</option>
    <option value="en|zh-CN">Chinese (Simplified)</option>
    <option value="en|zh-TW">Chinese (Traditional)</option>
    <option value="en|hr">Croatian</option>
    <option value="en|cs">Czech</option>
    <option value="en|da">Danish</option>
    <option value="en|nl">Dutch</option>
    <option value="en|en">English</option>
    <option value="en|et">Estonian</option>
    <option value="en|tl">Filipino</option>
    <option value="en|fi">Finnish</option>
    <option value="en|fr">French</option>
    <option value="en|gl">Galician</option>
    <option value="en|ka">Georgian</option>
    <option value="en|de">German</option>
    <option value="en|el">Greek</option>
    <option value="en|ht">Haitian Creole</option>
    <option value="en|iw">Hebrew</option>
    <option value="en|hi">Hindi</option>
    <option value="en|hu">Hungarian</option>
    <option value="en|is">Icelandic</option>
    <option value="en|id">Indonesian</option>
    <option value="en|ga">Irish</option>
    <option value="en|it">Italian</option>
    <option value="en|ja">Japanese</option>
    <option value="en|ko">Korean</option>
    <option value="en|lv">Latvian</option>
    <option value="en|lt">Lithuanian</option>
    <option value="en|mk">Macedonian</option>
    <option value="en|ms">Malay</option>
    <option value="en|mt">Maltese</option>
    <option value="en|no">Norwegian</option>
    <option value="en|fa">Persian</option>
    <option value="en|pl">Polish</option>
    <option value="en|pt">Portuguese</option>
    <option value="en|ro">Romanian</option>
    <option value="en|ru">Russian</option>
    <option value="en|sr">Serbian</option>
    <option value="en|sk">Slovak</option>
    <option value="en|sl">Slovenian</option>
    <option value="en|es">Spanish</option>
    <option value="en|sw">Swahili</option>
    <option value="en|sv">Swedish</option>
    <option value="en|th">Thai</option>
    <option value="en|tr">Turkish</option>
    <option value="en|uk">Ukrainian</option>
    <option value="en|ur">Urdu</option>
    <option value="en|vi">Vietnamese</option>
    <option value="en|cy">Welsh</option>
    <option value="en|yi">Yiddish</option>
</select>
<div id="google_translate_element2"></div>
<!-- <script type="text/javascript">
    function googleTranslateElementInit2() {
        new google.translate.TranslateElement({ pageLanguage: "en", autoDisplay: false }, "google_translate_element2");
    }
</script> -->
<script type="text/javascript" src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit2"></script>

<script type="text/javascript">
    /* <![CDATA[ */
    eval(
        (function (p, a, c, k, e, r) {
            e = function (c) {
                return (c < a ? "" : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36));
            };
            if (!"".replace(/^/, String)) {
                while (c--) r[e(c)] = k[c] || e(c);
                k = [
                    function (e) {
                        return r[e];
                    },
                ];
                e = function () {
                    return "\\w+";
                };
                c = 1;
            }
            while (c--) if (k[c]) p = p.replace(new RegExp("\\b" + e(c) + "\\b", "g"), k[c]);
            return p;
        })(
            "6 7(a,b){n{4(2.9){3 c=2.9(\"o\");c.p(b,f,f);a.q(c)}g{3 c=2.r();a.s('t'+b,c)}}u(e){}}6 h(a){4(a.8)a=a.8;4(a=='')v;3 b=a.w('|')[1];3 c;3 d=2.x('y');z(3 i=0;i<d.5;i++)4(d[i].A=='B-C-D')c=d[i];4(2.j('k')==E||2.j('k').l.5==0||c.5==0||c.l.5==0){F(6(){h(a)},G)}g{c.8=b;7(c,'m');7(c,'m')}}",
            43,
            43,
            "||document|var|if|length|function|GTranslateFireEvent|value|createEvent||||||true|else|doGTranslate||getElementById|google_translate_element2|innerHTML|change|try|HTMLEvents|initEvent|dispatchEvent|createEventObject|fireEvent|on|catch|return|split|getElementsByTagName|select|for|className|goog|te|combo|null|setTimeout|500".split(
                "|"
            ),
            0,
            {}
        )
    );
    /* ]]> */
</script>

    
    <!-- <div id="custom-loader" class="">
        <div id="app-loader-bg">
            <div id="app-loader">
                <div class="app-loader-child"></div>
                <div class="app-loader-child"></div>
                <div class="app-loader-child"></div>
                <div class="app-loader-child"></div>
                <div class="app-loader-child"></div>
            </div>
        </div>
    </div>  -->

    <nav class="navbar navbar-light custom-nav-bg">

        <div class="container">
            <a class="navbar-brand" href="/register">
                <!-- <img src="https://beta.tmgstock.com/public/img/logo/logo.png" alt="" width="" height="40"> -->
            </a>

            <div class="">
                <!-- <img class="me-2 nav-img" src="" id="tt" alt=""> -->
                                    <button onclick="location.href='/register'" class="btn btn-outline-primary">Sign
                        Up</button>
                
                            </div>
        </div>
    </nav>


    
<div class="container-fluid pb-5 pt-5">
    <div class="d-flex justify-content-center align-items-center full-page-containter">
        <div class="col-12 col-md-5 col-lg-3">
            <center class="mb-4">
                <h3>Log In</h3>
            </center>

            <!-- Alerts Starts -->
            
            <!-- Alerts Starts -->
            

            <form action="/login" method="POST">
                <!-- <input type="hidden" name="_token" value="ROH2vfuXlPMdfpmtDhCuPLEfO0G9AiwQLJXW6Og2"> -->
                <div class="form-floating mb-3">
                    <label for="email">Email address</label>
                    <input type="email" name="email"  id="email" class="form-control" placeholder="John@example.com">
                    
                    <span class="email error"></span>
                    </div>

                <div class="form-floating mb-3">
                    <label for="password">Password</label>
                    <input type="password" name="password" class="form-control" id="password" placeholder="********">

                    <span class="password error"></span>
                    </div>

                <div class="form-check mt-4 mb-4">
                    <input name="remember" class="form-check-input" type="checkbox" value="yes" id="flexCheckDefault" checked>
                    <label class="form-check-label montserrat" for="flexCheckDefault">
                        Remember me
                    </label>
                </div>

                <div class="d-grid d-block">
                    <button class="btn btn-success btn-lg mb-4" data-processing="true" type="submit">Log In</button>
                </div>

                <!-- <p class="text-center montserrat"><a href="#">Forgot Password?</a></p> -->
                <p class="text-center montserrat text-muted">Don't have an account? <a href="/register">Sign Up</a></p>
            </form>

        </div>


    </div>
</div>

<script>
    const form = document.querySelector('form');
     const emailError = document.querySelector('.email.error');
     const passwordError = document.querySelector('.password.error');
     form.addEventListener('submit', async (e) => {
       e.preventDefault();
       // reset errors
       emailError.textContent = '';
       passwordError.textContent = '';
       // get values
       const email = form.email.value;
       const password = form.password.value;
       try {
         const res = await fetch('/login', { 
           method: 'POST', 
           body: JSON.stringify({ email, password }),
           headers: {'Content-Type': 'application/json'}
         });
         const data = await res.json();
         // console.log(data);
         if (data.errors) {
           emailError.textContent = data.errors.email;
           passwordError.textContent = data.errors.password;
         }
         if (data.user) {
           location.assign('/dashboard');
         }
       }
       catch (err) {
         console.log(err);
       }
     });
   
   
   </script>

    
    <script src="https://beta.tmgstock.com/public/vendor/jquery/jquery.js"></script>
    <script src="https://beta.tmgstock.com/public/vendor/bootstrap/js/bootstrap.bundle.js?"></script>
    <script src="https://beta.tmgstock.com/public/vendor/fontawesome/js/all.js"></script>

    
    <!-- <script src="https://beta.tmgstock.com/public/js/app.js?68449"></script>
    <script src="https://beta.tmgstock.com/public/js/auth.js?61114"></script> -->


</html>
